template: ##blog-page##
title: ##Building a Line Chart with D3##
author: ##Jack Misteli##
content:  ##<p>If you are using the D3 API for the first time, you are probably a little bit intimidated. A line chart is great project to get your feet in the water ðŸ˜ƒ ðŸ’§. Before we get started make sure you read <a href="/javascript/setting-up-d3">our article about setting up d3 in your project</a>.
</p>

<pre>
<code >
function $initHighlight(block, cls) {
  try {
    if (cls.search(/\bno\-highlight\b/) != -1)
      return process(block, true, 0x0F) +
             ` class="${cls}"`;
  } catch (e) {
    /* handle exception */
  }
  for (var i = 0 / 2; i < classes.length; i++) {
    if (checkCondition(classes[i]) === undefined)
      console.log('undefined');
  }

  return (
    <div>
      <web-component>{block}</web-component>
    </div>
  )
}

export  $initHighlight;
</code>
</pre>
<h2>Choosing our data</h2>
<p><a href="#writing-lines"> I already have data skip â†“</a><p>
<p>Choosing the right data set is important. We have to make sure that we'll have something that plots well with no crazy edge cases. </p>

<p>I wanted to choose something a bit uplifting in these hard times so I chose some of the happiness data available at <a href="https://ourworldindata.org/happiness-and-life-satisfaction#all-charts-preview" target="_blank">Our World in Data</a>.
 </p>

<p>
Usually when you find data it will be <a href="/programming/what-is-csv.html"> in a CSV format</a>. Here our data looks like this:

<pre>
Entity,Code,Year, (%)
Albania,ALB,1998,33.433434
Albania,ALB,2004,58.799999
Algeria,DZA,2004,80.733231
Algeria,DZA,2014,79.89418
Andorra,AND,2009,92.878632
Argentina,ARG,1984,78.571426
...
</pre>
<p>
We have four columns with country names and codes, years, and percentages. The first thing I want to do is think about what data format I want to play with. All I'm interested in is the year, country name and happiness percentage.</p>

<p> I want to use that data in Javascript so we have to think in terms of Javascript friendly format. To do so, I want to turn the CSV data into a JSON Object.</p> 

<p>There is a multitude of services you can use</p>

<p>An array of objects very similar to the csv format.</p>
<pre>
	<code class="javascript">
		const data = [
			{country: 'Albania', year:'1998', happinessPercentage:33.433434},
			...
		]
	</code>
</pre>

<p>An object with country names as keys.</p>
<pre>
<code class='code-rotate'>
	const data = {
		Albania: [{
			year:'1998', 
			happinessPercentage:33.433434},
			{
				year: '2004'
				happinessPercentage: 58.799999
			}
			// More years
			]
		Argentina: [
			//...
		]
		//...
	}

</code>
</pre>

<p>An object with years as keys.</p>
<pre>
<code>
const data = {
		'1998': [{
			country:'Albania', 
			happinessPercentage:33.433434},
			{
				country: 'France'
				happinessPercentage: 86.799999
			}
			// ...More countrys
		]
		'1999': [
			//...
		]
		//...More years
	}
</code>
</pre>

<p>
There are a lot of tools you can use to transform csv to json. If you want to stick to Node/Javascript you can use the npm package <mark>csvtojson</mark>. Here is the script I used
</p>

<h2 ><a id='writing-lines'></a>Writing the lines </h2>


##

